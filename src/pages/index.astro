---
import type { AppsData } from "../types/app";
import { promises as fs } from "fs";
import path from "path";
import LastUpdated from "../components/LastUpdated.astro";
import ProgressBar from "../components/ProgressBar.svelte";

let appsData: AppsData | null = null;
let error: string | null = null;

try {
  const dataPath = path.join(process.cwd(), "src", "data", "apps.json");
  const fileContent = await fs.readFile(dataPath, "utf-8");
  appsData = JSON.parse(fileContent) as AppsData;
} catch (e) {
  if (e instanceof Error) {
    if ("code" in e && e.code === "ENOENT") {
      error = "データファイルが見つかりません。'bun run update' を実行してデータを生成してください。";
    } else {
      error = `データの読み込みに失敗しました: ${e.message}`;
    }
  } else {
    error = "予期しないエラーが発生しました。";
  }
}
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>App Dashboard</title>
    <meta name="description" content="Mobile app development dashboard" />
  </head>
  <body>
    <main>
      <header style="margin-bottom: 30px; padding: 20px; background-color: #fafafa; border-radius: 8px;">
        <h1 style="margin: 0 0 10px 0;">App Dashboard</h1>
        {appsData && (
          <div style="display: flex; align-items: center; gap: 20px; margin-top: 10px;">
            <LastUpdated lastUpdated={appsData.lastUpdated} />
            <span style="color: #666; font-size: 0.9rem;">アプリ数: {appsData.apps.length}</span>
          </div>
        )}
      </header>
      
      {error ? (
        <div style="padding: 20px; background-color: #fee; border: 1px solid #fcc; border-radius: 4px; margin: 20px;">
          <strong>エラー:</strong> {error}
        </div>
      ) : appsData ? (
        <div>
          <div style="display: grid; gap: 20px; margin-top: 20px;">
            {appsData.apps.map((app) => (
              <div style="padding: 20px; border: 1px solid #ddd; border-radius: 8px;">
                <div style="display: flex; align-items: center; gap: 10px;">
                  <img src={app.icon} alt={app.name} width="60" height="60" style="border-radius: 12px;" />
                  <div>
                    <h2 style="margin: 0;">{app.name}</h2>
                    <p style="margin: 0; color: #666;">{app.repository}</p>
                    <p style="margin: 0;">
                      <span style="background-color: #e0e0e0; padding: 2px 8px; border-radius: 4px; font-size: 0.9em;">
                        {app.platform}
                      </span>
                    </p>
                  </div>
                </div>
                
                {app.latestRelease && (
                  <div style="margin-top: 15px;">
                    <strong>最新リリース:</strong> 
                    <a href={app.latestRelease.url} target="_blank" rel="noopener noreferrer">
                      {app.latestRelease.version}
                    </a>
                    ({app.latestRelease.date})
                  </div>
                )}
                
                <ProgressBar milestone={app.milestone} client:load />
                
                <div style="margin-top: 10px;">
                  <a href={app.links.github} target="_blank" rel="noopener noreferrer">GitHub</a>
                  {app.links.appStore && (
                    <> | <a href={app.links.appStore} target="_blank" rel="noopener noreferrer">App Store</a></>
                  )}
                  {app.links.playStore && (
                    <> | <a href={app.links.playStore} target="_blank" rel="noopener noreferrer">Play Store</a></>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>
      ) : (
        <p>データを読み込み中...</p>
      )}
    </main>
  </body>
</html>